{"version":3,"sources":["servicies/FetchApi.jsx","components/CastReviews/CastReviews.jsx","views/MovieDetailsView.jsx"],"names":["key","FetchTrending","callback","url","axios","get","then","resp","data","results","catch","error","message","FetchMovies","query","res","length","alert","FetchMovieById","id","FetchMovieReviews","FetchMovieCast","cast","CastReviews","location","to","pathname","state","from","className","activeClassName","Cast","lazy","Reviews","MovieDetailsView","movieId","useParams","useLocation","useHistory","useRouteMatch","useState","movie","setMovie","useEffect","src","poster_path","alt","title","genres","map","genre","name","join","overview","fallback","path","component"],"mappings":"yIAAA,+LAEMA,EAAM,mCAGL,SAASC,EAAcC,GAC1B,IAAMC,EAAG,UAHO,0DAGP,OAAoBH,GAC7BI,IACKC,IAAIF,GACJG,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAKC,WACzBH,KAAKJ,GACLQ,OAAM,SAACC,GAAD,OAAWA,EAAMC,WAGzB,SAASC,EAAYC,EAAOZ,GAC/B,IAAMC,EAAG,4DAAwDH,EAAxD,iCAAoFc,EAApF,+BACTV,IAAMC,IAAIF,GACLG,MAAK,SAAAS,GACF,OAAKA,EAAIP,KAAKC,QAAQO,OAGfD,EAAIP,KAAKC,QAFLQ,MAAM,oBAIpBX,KAAKJ,GACLQ,OAAM,SAAAC,GAAK,OAAIA,EAAMC,WAGvB,SAASM,EAAeC,EAAIjB,GAC/B,IAAMC,EAAG,6CAAyCgB,EAAzC,oBAAuDnB,EAAvD,mBACTI,IACKC,IAAIF,GACJG,MAAK,SAAAS,GAAG,OAAIA,EAAIP,QAChBF,KAAKJ,GACLQ,OAAM,SAAAC,GAAK,OAAIA,EAAMC,WAGvB,SAASQ,EAAkBD,EAAIjB,GAClC,IAAMC,EAAG,6CAAyCgB,EAAzC,4BAA+DnB,EAA/D,0BACTI,IACKC,IAAIF,GACJG,MAAK,SAAAS,GAAG,OAAIA,EAAIP,KAAKC,WACrBH,KAAKJ,GACLQ,OAAM,SAAAC,GAAK,OAAIA,EAAMC,WAGvB,SAASS,EAAeF,EAAIjB,GAC/B,IAAMC,EAAG,6CAAyCgB,EAAzC,oBAAuDnB,EAAvD,mBACTI,IACKC,IAAIF,GACJG,MAAK,SAACS,GAAD,OAASA,EAAIP,KAAKc,QACvBhB,KAAKJ,GACLQ,OAAM,SAACC,GAAD,OAAWA,EAAMC,a,gJChDjB,SAASW,EAAT,GAAyC,IAAlBpB,EAAiB,EAAjBA,IAAKqB,EAAY,EAAZA,SAEvC,OACI,gCACI,wDACA,+BACI,6BACI,cAAC,IAAD,CACIC,GAAI,CACAC,SAAS,GAAD,OAAKvB,EAAL,SACRwB,MAAO,CACHC,KAAMJ,EAASG,MAAMC,OAG7BC,UAAU,WACVC,gBAAgB,cARpB,oBAaJ,6BACI,cAAC,IAAD,CACIL,GAAI,CACAC,SAAS,GAAD,OAAKvB,EAAL,YACRwB,MAAO,CACHC,KAAMJ,EAASG,MAAMC,OAG7BC,UAAU,WACVC,gBAAgB,cARpB,6BCjBpB,IAAMC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,iCAEZ,SAASE,IACpB,IAAQC,EAAYC,cAAZD,QACFX,EAAWa,cAETlC,GADQmC,cACAC,cAARpC,KACR,EAA0BqC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACNzB,YAAeiB,EAASO,KACzB,CAACP,IAEI,qCAAGM,GAAS,sBAAKZ,UAAU,aAAf,UAChB,qBACIA,UAAU,cACVe,IAAG,0CAAqCH,EAAMI,aAC9CC,IAAI,KAER,oBAAIjB,UAAU,GAAd,SAAkBY,EAAMM,QACxB,8BAAG,sBAAMlB,UAAU,OAAhB,oBAAH,IAAyCY,EAAMO,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,SACpF,8BAAG,sBAAMvB,UAAU,OAAhB,uBAAH,IAA4CY,EAAMY,eAGlD,cAAC9B,EAAD,CAAapB,IAAKA,EAAKqB,SAAUA,IACjC,eAAC,WAAD,CAAU8B,SAAU,cAAC,IAAD,IAApB,UACI,cAAC,IAAD,CAAOC,KAAK,wBAAwBC,UAAW,cAACzB,EAAD,MAE/C,cAAC,IAAD,CAAOwB,KAAK,4BAA4BC,UAAW,cAACvB,EAAD","file":"static/js/MovieDetailsView.744e609c.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst key = '6acc6746be8af475302214b8237b9c48'\r\nconst urlTrending = 'https://api.themoviedb.org/3/trending/all/day?api_key='\r\n\r\nexport function FetchTrending(callback) {\r\n    const url = `${urlTrending}${key}`\r\n    axios\r\n        .get(url)\r\n        .then((resp) => resp.data.results)\r\n        .then(callback)\r\n        .catch((error) => error.message);\r\n}\r\n\r\nexport function FetchMovies(query, callback) {\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            if (!res.data.results.length) {\r\n                return alert('Nothing found')\r\n            }\r\n            return res.data.results\r\n        })\r\n        .then(callback)\r\n        .catch(error => error.message)\r\n}\r\n\r\nexport function FetchMovieById(id, callback) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\r\n    axios\r\n        .get(url)\r\n        .then(res => res.data)\r\n        .then(callback)\r\n        .catch(error => error.message)\r\n}\r\n\r\nexport function FetchMovieReviews(id, callback) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\r\n    axios\r\n        .get(url)\r\n        .then(res => res.data.results)\r\n        .then(callback)\r\n        .catch(error => error.message)\r\n}\r\n\r\nexport function FetchMovieCast(id, callback) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\r\n    axios\r\n        .get(url)\r\n        .then((res) => res.data.cast)\r\n        .then(callback)\r\n        .catch((error) => error.message);\r\n}","import { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function CastReviews({ url, location }) {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Additional information</h3>\r\n            <ul>\r\n                <li>\r\n                    <NavLink\r\n                        to={{\r\n                            pathname: `${url}/cast`,\r\n                            state: {\r\n                                from: location.state.from,\r\n                            },\r\n                        }}\r\n                        className=\"add_link\"\r\n                        activeClassName=\"active_link\"\r\n                    >\r\n                        Cast\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        to={{\r\n                            pathname: `${url}/reviews`,\r\n                            state: {\r\n                                from: location.state.from,\r\n                            },\r\n                        }}\r\n                        className=\"add_link\"\r\n                        activeClassName=\"active_link\"\r\n                    >\r\n                        Reviews\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nCastReviews.propTypes = {\r\n    value: PropTypes.string,\r\n    location: PropTypes.object,\r\n};","import { useParams, useLocation, useRouteMatch, useHistory } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner';\r\nimport { Route } from \"react-router-dom\";\r\nimport { useEffect, useState, Suspense, lazy } from 'react'\r\nimport { FetchMovieById } from '../servicies/FetchApi'\r\nimport CastReviews from '../components/CastReviews/CastReviews';\r\n\r\nconst Cast = lazy(() => import(\"../components/Cast/Cast\"));\r\nconst Reviews = lazy(() => import(\"../components/Reviews/Reviews\"));\r\n\r\nexport default function MovieDetailsView() {\r\n    const { movieId } = useParams()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const { url } = useRouteMatch()\r\n    const [movie, setMovie] = useState(null)\r\n\r\n    useEffect(() => {\r\n        FetchMovieById(movieId, setMovie)\r\n    }, [movieId])\r\n\r\n    return (<>{movie && <div className='movie-card'>\r\n        <img\r\n            className=\"movie-image\"\r\n            src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n            alt=\"\"\r\n        />\r\n        <h3 className=\"\">{movie.title}</h3>\r\n        <p><span className='bold'>Genre:</span> {movie.genres.map(genre => genre.name).join(\", \")}</p>\r\n        <p><span className='bold'>Overview:</span> {movie.overview}</p>\r\n    </div>\r\n    }\r\n        <CastReviews url={url} location={location} />\r\n        <Suspense fallback={<Loader />}>\r\n            <Route path=\"/movies/:movieId/cast\" component={<Cast />}>\r\n            </Route>\r\n            <Route path=\"/movies/:movieId/reviews \" component={<Reviews />}>\r\n            </Route>\r\n        </Suspense></>\r\n\r\n    )\r\n}"],"sourceRoot":""}