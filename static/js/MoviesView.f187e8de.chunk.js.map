{"version":3,"sources":["servicies/FetchApi.jsx","components/FilmsRender/FilmsRender.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/form/Form.jsx","views/MoviesView.jsx"],"names":["key","FetchTrending","callback","url","axios","get","then","resp","data","results","catch","error","message","FetchMovies","query","res","length","alert","FetchMovieById","id","FetchMovieReviews","FetchMovieCast","cast","FilmsRender","list","location","className","map","film","to","pathname","state","from","src","poster_path","alt","title","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","Form","onSubmit","useState","setQuery","e","preventDefault","reset","htmlFor","type","onChange","placeholder","MoviesView","useLocation","URLSearchParams","search","history","useHistory","foundMovies","setFoundMovies","useEffect"],"mappings":"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","file":"static/js/MoviesView.f187e8de.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst key = '6acc6746be8af475302214b8237b9c48'\r\nconst urlTrending = 'https://api.themoviedb.org/3/trending/all/day?api_key='\r\n\r\nexport function FetchTrending(callback) {\r\n    const url = `${urlTrending}${key}`\r\n    axios\r\n        .get(url)\r\n        .then((resp) => resp.data.results)\r\n        .then(callback)\r\n        .catch((error) => error.message);\r\n}\r\n\r\nexport function FetchMovies(query, callback) {\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n    axios.get(url)\r\n        .then(res => {\r\n            if (!res.data.results.length) {\r\n                return alert('Nothing found')\r\n            }\r\n            return res.data.results\r\n        })\r\n        .then(callback)\r\n        .catch(error => error.message)\r\n}\r\n\r\nexport function FetchMovieById(id, callback) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\r\n    axios\r\n        .get(url)\r\n        .then(res => res.data)\r\n        .then(callback)\r\n        .catch(error => error.message)\r\n}\r\n\r\nexport function FetchMovieReviews(id, callback) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\r\n    axios\r\n        .get(url)\r\n        .then(res => res.data.results)\r\n        .then(callback)\r\n        .catch(error => error.message)\r\n}\r\n\r\nexport function FetchMovieCast(id, callback) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\r\n    axios\r\n        .get(url)\r\n        .then((res) => res.data.cast)\r\n        .then(callback)\r\n        .catch((error) => error.message);\r\n}","import styles from './FilmsRender.module.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FilmsRender({ list, location }) {\r\n    return (\r\n        <>\r\n            <h2>Trending films</h2>\r\n            <ul className=''>\r\n                {list.map(film => {\r\n                    return (\r\n                        <li key={film.id}>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/movies/${film.id}`,\r\n                                    state: { from: location },\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    className=\"\"\r\n                                    src={`https://image.tmdb.org/t/p/w342/${film.poster_path}`}\r\n                                    alt=\"\"\r\n                                />\r\n                                <h2 className=\"\">{film.title}</h2>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nFilmsRender.propTypes = {\r\n    list: PropTypes.array,\r\n    location: PropTypes.object,\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Form({ onSubmit }) {\r\n    const [query, setQuery] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setQuery(e.target.value)\r\n    }\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        onSubmit(query)\r\n        e.target.reset()\r\n        setQuery('')\r\n    }\r\n    return (\r\n        <form className='form'\r\n            onSubmit={handleSubmitForm}\r\n        >\r\n            <label htmlFor=\"\">Find your movie\r\n                <input\r\n                    value={query}\r\n                    type=\"text\"\r\n                    onChange={handleInputChange}\r\n                    placeholder='Movie Name'\r\n                />\r\n            </label>\r\n            <button type='submit'>Start Search</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport FilmsRender from '../components/FilmsRender/FilmsRender'\r\nimport { FetchMovies } from \"../servicies/FetchApi\";\r\nimport Form from \"../components/form/Form\";\r\n\r\nexport default function MoviesView() {\r\n    const location = useLocation()\r\n    const url = new URLSearchParams(location.search).get(\"query\");\r\n    const history = useHistory();\r\n    const [foundMovies, setFoundMovies] = useState(null)\r\n    const [query, setQuery] = useState(url ?? \"\");\r\n\r\n    const getQuery = (query) => {\r\n        history.push({ ...location, search: `query=${query}` });\r\n        setQuery(query);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (query === \"\" && url === null) return;\r\n        FetchMovies(query, setFoundMovies);\r\n    }, [query, url]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={getQuery}></Form>\r\n            {foundMovies && <FilmsRender list={foundMovies} location={location} />}\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}