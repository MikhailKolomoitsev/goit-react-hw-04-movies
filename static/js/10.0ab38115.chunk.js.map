{"version":3,"sources":["components/Reviews/Reviews.jsx"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","FetchMovieReviews","console","log","length","map","review","className","author","content","id"],"mappings":"kOAKe,SAASA,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QAKR,OAJAE,qBAAU,WACRC,YAAkBH,EAASD,KAC1B,CAACC,IACJI,QAAQC,IAAI,UAAWP,GAErB,8BACGA,EAAQQ,OAAS,EAChB,6BACGR,EAAQS,KAAI,SAACC,GACZ,OACE,qBAAoBC,UAAU,eAA9B,UACE,+BAAI,sBAAMA,UAAU,SAAhB,qBAAJ,KAA8CD,EAAOE,UACrD,mBAAGD,UAAU,gBAAb,SAA8BD,EAAOG,YAF9BH,EAAOI,SAQtB","file":"static/js/10.0ab38115.chunk.js","sourcesContent":["import { useParams } from 'react-router'\nimport { useState, useEffect } from 'react'\nimport { FetchMovieReviews } from '../../servicies/FetchApi'\n// import { Link } from \"react-router-dom\";\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([])\n  const { movieId } = useParams()\n  useEffect(() => {\n    FetchMovieReviews(movieId, setReviews)\n  }, [movieId])\n  console.log('reviews', reviews)\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => {\n            return (\n              <li key={review.id} className='reviews-item'>\n                <h4><span className=\"author\">Author:</span>  {review.author}</h4>\n                <p className='reviewContent'>{review.content}</p>\n              </li>\n            )\n          })}\n        </ul>\n      ) : (\n        <h1>No results</h1>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}